#!/usr/bin/env python

import optparse
import os
import subprocess
import sys
import time

import hgtlib


def apply_patches(show_conflict):
    git_dir = os.getcwd()
    t0 = time.time()
    commits, start_point = hgtlib.get_patches()
    applylist = hgtlib.get_applylist()

    def get_selected_patches():
        got = []
        def recurse(elt):
            if "patches" in elt:
                apply_id = elt["group_id"]
            else:
                apply_id = elt["commit_id"]

            if applylist.get(apply_id, True):
                if "patches" in elt:
                    for child in elt["patches"]:
                        recurse(child)
                else:
                    got.append(elt)
        for row in commits:
            recurse(row)
        return got

    msg = hgtlib.apply_patches(start_point, get_selected_patches(),
                               git_dir, show_conflict)
    print msg


def main(args):
    parser = optparse.OptionParser()
    parser.add_option("-C", dest="conflict", action="store_true",
                      help="Show conflict in working copy")
    options, args = parser.parse_args(args)
    if len(args) != 0:
        parser.error("Unexpected arguments")
    apply_patches(options.conflict)


if __name__ == "__main__":
    main(sys.argv[1:])
